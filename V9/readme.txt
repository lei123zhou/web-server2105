测试在页面上展现一张图片
实现:
1:在webapps/myweb下保存一张图片,命名为logo.png
2:在webapps/myweb/index.html页面上使用<img>标签来展现logo.png

经测试发现,在idea中本地预览显示没有问题,但是当启动WebServer后请求该页面
时,图片加载失败.
原因:
当一个页面上需要加载其他资源时(图片,样式文件,脚本文件等)浏览器会根据html
页面上指定的路径再次发起请求下载这些资源后进行使用.
由于我们的服务端目前仅接受一次请求后就停止了,所以浏览器无法下载图片.

解决:
将WebServer主类start方法中接受客户端连接并启动线程处理的工作放在死循环
中重复进行即可.由于我们的服务端处理一问一答工作已经完成,所以此时循环接受
客户端的链接是没有任何问题的了.


经过上述改动后,我们将学子商城静态页面导入到webapps后尝试在浏览器请求其
首页index.html.发现浏览器不能完全显示该页面应有的效果.通过跟踪浏览器与
服务端的交互发现,无论浏览器请求的资源是什么,服务端在回复该资源时用于说明
这个资源类型的响应头:Content-Type的值是固定的"text/html".这导致浏览器
在接收到该资源后无法正确理解资源的作用.
另外一个问题是,我们的服务端是固定的发送两个响应头Content-Type还有
Content-Length.实际情况中服务端在发送一个响应时往往会包含很多响应头,
因此我们也需要支持可以根据实际需要发送对应的响应头.

先实现可以根据需要向响应对象中设置需要发送的响应头,然后进行发送.
实现:
1:在HttpResponse中添加一个属性:Map headers
  这个Map存放所有需要发送的响应头,其中key:响应头名字 value:响应头的值

2:添加一个方法:putHeaders(),允许外界将希望发送的响应头设置进来,这里
  将这个头存入headers这个Map备用

3:修改sendHeaders方法,将原有的发送两个固定的响应头改为遍历headers这个
  Map,将所有的响应头发送.

4:在处理请求的环节:DispatcherServlet中,在处理过程中通常设置要发送的
  响应头即可.


实现根据请求的资源的后缀设置响应头Content-Type的值.
在DispatcherServlet中,当我们定位到客户端请求的资源文件后,根据该文件
后缀设置响应头.这里需要创建一个Map来保存资源后缀和对应的Content-Type
的值.


最后做一个小的优化措施
一个响应中只要有响应正文,就应当包含说明正文的两个响应头Content-Type和
Content-Length.那我们完全可以将设置这两个响应头的工作放在HttpResponse
设置响应正文的方法setEntity中.
这样以来,将来需要设置正文文件时,仅需要调用setEntity方法设置即可,该方法
内部会自动根据正文文件设置对应的两个响应头了!




